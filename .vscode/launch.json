//
// Use IntelliSense to learn about possible attributes.
// Hover to view descriptions of existing attributes.
// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
// (fyi. the answer is yes, ./vscode shall remain inside the github repository)
//
// Special thanks to Dave Dumke, (david.dumke@nautel.com) of Nautel for piecing
// together this lovely little script as it saves so much time and energy.
//
{
  "version": "0.2.0",
  "configurations": [
    {
      "type": "by-gdb",
      "request": "launch",
      "name": "run-unittests(gdb)",
      "program": "${workspaceFolder}/build/run-unittests-${workspaceRootFolderName}",
      "preLaunchTask": "Build C++ project",
      "cwd": "${workspaceRoot}"
    },
    {
      "type": "by-gdb",
      "request": "launch",
      "name": "Launch((pc_no1))",
      "program": "${workspaceFolder}/build/pc_no1",
      "preLaunchTask": "Build C++ project",
      "cwd": "${workspaceRoot}"
    },
    {
      "type": "sldb",
      "request": "launch",
      "name": "(sldb) Launch",
      "program": "${workspaceFolder}/build/run-unittests-${workspaceRootFolderName}",
      "preLaunchTask": "Build C++ project",
      "args": [],
      "cwd": "${workspaceRoot}"
  },
    {
      "type": "by-gdb",
      "request": "launch",
      "name": "Launch(promote)",
      "program": "${workspaceFolder}/build/promote",
      "preLaunchTask": "Build C++ project",
      "cwd": "${workspaceRoot}"
    },
    {
      "name": "run-unittests",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/run-unittests-quickpay",
      "args": [  ],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ],
      "preLaunchTask": "Build C++ project",
      "miDebuggerPath": "/usr/bin/gdb"
    },
    {
      "name": "pc_no1",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/pc_no1",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ],
      "preLaunchTask": "Build C++ project",
      "miDebuggerPath": "/usr/bin/gdb"
    },
    {
      "name": "pc_no2",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/pc_no2",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ],
      "preLaunchTask": "Build C++ project",
      "miDebuggerPath": "/usr/bin/gdb"
    },
    {
      "name": "pc_no6",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/pc_no6",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ],
      "preLaunchTask": "Build C++ project",
      "miDebuggerPath": "/usr/bin/gdb"
    },
    {
      "name": "pc_no7",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/pc_no7",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ],
      "preLaunchTask": "Build C++ project",
      "miDebuggerPath": "/usr/bin/gdb"
    },
  ]
}
